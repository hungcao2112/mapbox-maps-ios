{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/any"]}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if any of the inputs are "},{"code":"true","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", the result is ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" and no further input expressions are evaluated."}],"kind":"symbol","metadata":{"roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"any","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"modules":[{"name":"MapboxMaps"}],"externalID":"s:10MapboxMaps3ExpV8OperatorV3anyAEvpZ","title":"any","role":"symbol","symbolKind":"property"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/any"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","text":"Operator","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}]}]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","abstract":[],"kind":"article","role":"collection","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","abstract":[],"title":"Exp.Operator","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exp"}],"url":"\/documentation\/mapboxmaps\/exp","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"title":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Exp"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"title":"MapboxMaps","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"title":"Expressions","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","abstract":[],"url":"\/documentation\/mapboxmaps\/expressions","type":"topic","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/any":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/any","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/any","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"title":"any","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if any of the inputs are "},{"code":"true","type":"codeVoice"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"text":" otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", the result is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" and no further input expressions are evaluated.","type":"text"}],"role":"symbol"}}}