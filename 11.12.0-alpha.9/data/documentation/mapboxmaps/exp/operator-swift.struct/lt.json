{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/lt"},"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is strictly less than the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"code":"collator","type":"codeVoice"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"metadata":{"roleHeading":"Type Property","role":"symbol","symbolKind":"property","title":"lt","externalID":"s:10MapboxMaps3ExpV8OperatorV2ltAEvpZ","modules":[{"name":"MapboxMaps"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lt"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lt","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","text":"Operator","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier"}],"platforms":["iOS"],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/lt"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"title":"MapboxMaps","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exp"}],"url":"\/documentation\/mapboxmaps\/exp","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"type":"text","text":" "},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"title":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Exp"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"title":"Expressions","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","abstract":[],"url":"\/documentation\/mapboxmaps\/expressions","type":"topic","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","abstract":[],"title":"Exp.Operator","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","abstract":[],"kind":"article","role":"collection","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/lt":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/lt","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/lt","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV"}],"title":"lt","kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the first input is strictly less than the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"role":"symbol"}}}