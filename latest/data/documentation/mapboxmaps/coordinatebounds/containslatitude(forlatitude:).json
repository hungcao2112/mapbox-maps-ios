{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}],"name":"latitude"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"metadata":{"role":"symbol","modules":[{"name":"MapboxMaps"}],"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"roleHeading":"Instance Method","symbolKind":"method","title":"containsLatitude(forLatitude:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"variants":[{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"title":"CoordinateBounds","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CoordinateBounds","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"url":"\/documentation\/overview","abstract":[],"type":"topic","title":"MapboxMaps Documentation","role":"collection","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","title":"containsLatitude(forLatitude:)","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"type":"topic","role":"collection","title":"MapboxMaps","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","kind":"article","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","role":"collectionGroup","title":"MapboxMap","abstract":[]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","value":"containsLatitudeForLatitude:","op":"replace"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"path":"\/metadata\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"}]},{"op":"add","value":null,"path":"\/topicSections"},{"op":"add","value":null,"path":"\/relationshipsSections"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:d","text":"double"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},"op":"replace"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}]}],"kind":"parameters"}},{"value":{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]},"op":"replace","path":"\/primaryContentSections\/2"},{"op":"replace","value":"MBMCoordinateBounds","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title"},{"value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","op":"replace"},{"value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace"},{"value":"containsLatitudeForLatitude:","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title"},{"value":[{"kind":"text","text":"- "},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"}]}]}