{"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}],"kind":"content"}],"metadata":{"modules":[{"name":"MapboxMaps"}],"role":"symbol","title":"containsLatitude(forLatitude:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"symbolKind":"method","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:"},"variants":[{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/coordinatebounds","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoordinateBounds"}],"navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"title":"CoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"title":"MapboxMaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","role":"collection","kind":"symbol","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","abstract":[],"kind":"article","url":"\/documentation\/overview","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","kind":"symbol","title":"containsLatitude(forLatitude:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","abstract":[],"title":"MapboxMap","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"value":"containsLatitudeForLatitude:","path":"\/metadata\/title","op":"replace"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace"},{"op":"add","path":"\/topicSections","value":null},{"path":"\/relationshipsSections","value":null,"op":"add"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"kind":"text","text":") "},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:d","kind":"typeIdentifier","text":"double"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":";"}],"languages":["occ"]}]},"path":"\/primaryContentSections\/0","op":"replace"},{"path":"\/primaryContentSections\/1","value":{"parameters":[{"name":"latitude","content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}]}],"kind":"parameters"},"op":"replace"},{"op":"replace","path":"\/primaryContentSections\/2","value":{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}],"kind":"content"}},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","value":"MBMCoordinateBounds","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]},{"value":"containsLatitudeForLatitude:","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace"},{"value":[{"kind":"text","text":"- "},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"}]}]}