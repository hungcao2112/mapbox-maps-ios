{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:10MapboxMaps25ExpressionArgumentBuilderV","text":"ExpressionArgumentBuilder","kind":"attribute","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentBuilder"},{"kind":"text","text":" "},{"text":"content","kind":"externalParam"},{"text":": () -> [","kind":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","kind":"typeIdentifier","text":"Argument"},{"kind":"text","text":"])"}]}],"kind":"declarations"}],"kind":"symbol","metadata":{"externalID":"s:10MapboxMaps3ExpV7contentACSayAC8ArgumentOGyXE_tcfc","symbolKind":"init","title":"init(content:)","roleHeading":"Initializer","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"content"},{"kind":"text","text":": () -> ["},{"text":"Exp","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"text":"Argument","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO"},{"text":"])","kind":"text"}],"modules":[{"name":"MapboxMaps"}]},"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/init(content:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"]]},"abstract":[{"text":"Initialize an expression with only arguments","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/mapboxmaps\/exp\/init(content:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection","title":"MapboxMaps","type":"topic","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"title":"Exp","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Exp","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","navigatorTitle":[{"text":"Exp","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true,"type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"text":" ","type":"text"},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"text":" ","type":"text"},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"type":"topic","abstract":[],"title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ExpressionArgumentBuilder":{"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentBuilder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressionArgumentBuilder"}],"url":"\/documentation\/mapboxmaps\/expressionargumentbuilder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExpressionArgumentBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":":nodoc:"},{"text":" ","type":"text"},{"text":"This API enables the Expressions DSL syntax and is not designed to be called directly.","type":"text"}],"title":"ExpressionArgumentBuilder"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","url":"\/documentation\/overview","role":"collection","kind":"article","abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/init(content:)":{"kind":"symbol","title":"init(content:)","abstract":[{"text":"Initialize an expression with only arguments","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/init(content:)","type":"topic","url":"\/documentation\/mapboxmaps\/exp\/init(content:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"content"},{"kind":"text","text":": () -> ["},{"text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Argument","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","kind":"typeIdentifier"},{"text":"])","kind":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Argument":{"title":"Exp.Argument","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Argument"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","navigatorTitle":[{"text":"Argument","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp\/argument","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"Exp.Argument"},{"type":"text","text":" is either a literal (associated with a double, string, boolean, or null value)"},{"text":" ","type":"text"},{"type":"text","text":"or another "},{"code":"Exp","type":"codeVoice"}],"type":"topic"}}}