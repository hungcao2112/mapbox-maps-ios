{"abstract":[{"type":"text","text":"Registers a "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" to receive the cameras being generated by this "},{"code":"ViewportState","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState"],["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"observeDataSource"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CameraOptions","kind":"typeIdentifier","text":"CameraOptions"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/Cancelable","preciseIdentifier":"c:objc(pl)MBXCancelable","text":"Cancelable"}],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that is invoked by the state whenever its camera changes. Returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" to stay subscribed and "},{"type":"codeVoice","code":"false"},{"text":" to unsubscribe. ","type":"text"},{"code":"handler","type":"codeVoice"},{"type":"text","text":" must be"},{"type":"text","text":" "},{"text":"invoked on the main queue.","type":"text"}],"type":"paragraph"}],"name":"handler"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"Cancelable","type":"codeVoice"},{"type":"text","text":" that the caller can use to unsubscribe."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is commonly used by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","isActive":true},{"type":"text","text":" implementations to obtain the"},{"type":"text","text":" "},{"text":"target camera for transition animations. Transitions typically cannot start their animations until after","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"handler"},{"type":"text","text":" is invoked for the first time, so it’s a good idea for states to invoke "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" with"},{"text":" ","type":"text"},{"type":"text","text":"the current camera if it’s not too stale rather than waiting for the next camera change to occur. To"},{"text":" ","type":"text"},{"text":"increase the likelihood that a valid camera exists when a handler is registered, design","type":"text"},{"type":"text","text":" "},{"code":"ViewportState","type":"codeVoice"},{"text":" implementations so that they start updating their internal state prior to when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"they are passed to "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The caller may either cancel the returned ","type":"text"},{"code":"Cancelable","type":"codeVoice"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"or"}],"type":"emphasis"},{"type":"text","text":" return "},{"type":"codeVoice","code":"false"},{"text":" from","type":"text"},{"type":"text","text":" "},{"code":"handler","type":"codeVoice"},{"text":" to indicate that it wishes to stop receiving updates. Following either of these events,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemenations must no longer invoke "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" and must release all strong references to it."}]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","title":"observeDataSource(with:)","required":true,"role":"symbol","modules":[{"name":"MapboxMaps"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"text":"CameraOptions","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> any "},{"text":"Cancelable","kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"externalID":"s:10MapboxMaps13ViewportStateP17observeDataSource4withSo13MBXCancelable_pSbAA13CameraOptionsVc_tF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection","title":"MapboxMaps","type":"topic","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CameraOptions":{"abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CameraOptions","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CameraOptions"}],"navigatorTitle":[{"text":"CameraOptions","kind":"identifier"}],"title":"CameraOptions","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/cameraoptions"},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/Cancelable":{"url":"\/documentation\/mapboxcommon\/cancelable","type":"topic","abstract":[{"type":"text","text":"Allows to cancel the associated asynchronous operation"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Cancelable","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/Cancelable","title":"Cancelable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cancelable","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"type":"topic","url":"\/documentation\/mapboxmaps\/viewporttransition","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportTransition"}],"role":"symbol","abstract":[{"code":"ViewportTransition","type":"codeVoice"},{"text":" is a protocol that ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","isActive":true},{"text":" depends on as it orchestrates transitions","type":"text"},{"text":" ","type":"text"},{"text":"to and from different ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState"},{"text":"s.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","kind":"symbol","title":"ViewportTransition","navigatorTitle":[{"kind":"identifier","text":"ViewportTransition"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportState":{"title":"ViewportState","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState","url":"\/documentation\/mapboxmaps\/viewportstate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewportState","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"code":"ViewportState","type":"codeVoice"},{"text":" is a protocol that ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"type":"text","text":" "},{"type":"text","text":"from different states."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportManager/transition(to:transition:completion:)":{"url":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"transition","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13ViewportStateP","text":"ViewportState"},{"text":", ","kind":"text"},{"text":"transition","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"ViewportTransition","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps18ViewportTransitionP"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"completion"},{"text":": ((","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"title":"transition(to:transition:completion:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","abstract":[{"type":"text","text":"Executes a transition to the requested state."}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","kind":"article","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup","title":"MapboxMap","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","url":"\/documentation\/overview","role":"collection","kind":"article","abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Camera-and-coordinates":{"type":"topic","title":"Camera and coordinates","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/mapboxmaps\/camera-and-coordinates"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportState/observeDataSource(with:)":{"role":"symbol","title":"observeDataSource(with:)","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"observeDataSource","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","kind":"typeIdentifier","text":"CameraOptions"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"abstract":[{"text":"Registers a ","type":"text"},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportManager":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ViewportManager","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","type":"topic","abstract":[{"type":"codeVoice","code":"Viewport"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"text":"transitions between them.","type":"text"}],"title":"ViewportManager","navigatorTitle":[{"kind":"identifier","text":"ViewportManager"}],"role":"symbol","url":"\/documentation\/mapboxmaps\/viewportmanager"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/title","op":"replace","value":"MBXCancelable"},{"value":[{"text":"MBXCancelable","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/fragments"},{"value":[{"kind":"identifier","text":"MBXCancelable"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/navigatorTitle","op":"replace"}]}]}