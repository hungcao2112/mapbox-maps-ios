{"kind":"symbol","variants":[{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"metadata":{"modules":[{"name":"MapboxMaps"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"role":"symbol","title":"containsLatitude(forLatitude:)","symbolKind":"method","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}]},{"parameters":[{"name":"latitude","content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}],"kind":"content"}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"title":"containsLatitude(forLatitude:)","type":"topic","role":"symbol","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[],"url":"\/documentation\/overview","role":"collection","type":"topic","title":"MapboxMaps Documentation"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"title":"CoordinateBounds","navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CoordinateBounds","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"role":"collectionGroup","abstract":[],"title":"MapboxMap","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","kind":"article","type":"topic","url":"\/documentation\/mapboxmaps\/mapboxmap-apis"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"role":"collection","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","title":"MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"url":"\/documentation\/mapboxmaps","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"value":"Instance Method","path":"\/metadata\/roleHeading","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"containsLatitudeForLatitude:"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/metadata\/fragments","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:@T@BOOL","text":"BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"text":"(","kind":"text"},{"text":"double","kind":"typeIdentifier","preciseIdentifier":"c:d"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"text":";","kind":"text"}],"platforms":["iOS"]}]}},{"path":"\/primaryContentSections\/1","op":"replace","value":{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"}},{"path":"\/primaryContentSections\/2","value":{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}]},"op":"replace"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","op":"replace","value":"MBMCoordinateBounds"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]}]}]}