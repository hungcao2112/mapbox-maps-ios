{"abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"text":" ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the bounds contains "},{"code":"latitude","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","title":"containsLatitude(forLatitude:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","modules":[{"name":"MapboxMaps"}],"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"symbolKind":"method"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","title":"containsLatitude(forLatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"kind":"article","abstract":[],"url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","type":"topic","title":"MapboxMap"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"role":"collection","url":"\/documentation\/mapboxmaps","type":"topic","kind":"symbol","title":"MapboxMaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"role":"collection","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[],"type":"topic","title":"MapboxMaps Documentation","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"type":"topic","kind":"symbol","title":"CoordinateBounds","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","role":"symbol","navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CoordinateBounds","kind":"identifier"}]}},"variantOverrides":[{"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"}]},{"path":"\/topicSections","value":null,"op":"add"},{"value":null,"op":"add","path":"\/relationshipsSections"},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier","text":"BOOL"},{"kind":"text","text":") "},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:d","text":"double"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]}},{"op":"replace","path":"\/primaryContentSections\/1","value":{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}],"name":"latitude"}],"kind":"parameters"}},{"path":"\/primaryContentSections\/2","op":"replace","value":{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}]}},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace"},{"value":"MBMCoordinateBounds","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","op":"replace"},{"value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments"},{"value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle"}],"traits":[{"interfaceLanguage":"occ"}]}]}